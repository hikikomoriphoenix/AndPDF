package marabillas.loremar.andpdf.font.encoding

import androidx.collection.SparseArrayCompat
import marabillas.loremar.andpdf.utils.exts.copyOf
import marabillas.loremar.andpdf.utils.exts.octalToDecimalKeys
import marabillas.loremar.andpdf.utils.exts.set

internal class MacExpertEncoding {
    companion object : EncodingSource {
        private val encoding = SparseArrayCompat<String>()

        init {
            encoding[276] = "AEsmall"
            encoding[207] = "Aacutesmall"
            encoding[211] = "Acircumflexsmall"
            encoding[47] = "Acutesmall"
            encoding[212] = "Adieresissmall"
            encoding[210] = "Agravesmall"
            encoding[214] = "Aringsmall"
            encoding[141] = "Asmall"
            encoding[213] = "Atildesmall"
            encoding[363] = "Brevesmall"
            encoding[142] = "Bsmall"
            encoding[256] = "Caronsmall"
            encoding[215] = "Ccedillasmall"
            encoding[311] = "Cedillasmall"
            encoding[136] = "Circumflexsmall"
            encoding[143] = "Csmall"
            encoding[254] = "Dieresissmall"
            encoding[372] = "Dotaccentsmall"
            encoding[144] = "Dsmall"
            encoding[216] = "Eacutesmall"
            encoding[220] = "Ecircumflexsmall"
            encoding[221] = "Edieresissmall"
            encoding[217] = "Egravesmall"
            encoding[145] = "Esmall"
            encoding[104] = "Ethsmall"
            encoding[146] = "Fsmall"
            encoding[140] = "Gravesmall"
            encoding[147] = "Gsmall"
            encoding[150] = "Hsmall"
            encoding[42] = "Hungarumlautsmall"
            encoding[222] = "Iacutesmall"
            encoding[224] = "Icircumflexsmall"
            encoding[225] = "Idieresissmall"
            encoding[223] = "Igravesmall"
            encoding[151] = "Ismall"
            encoding[152] = "Jsmall"
            encoding[302] = "Lslashmall"
            encoding[47] = "Lsmall"
            encoding[364] = "Macronsmall"
            encoding[155] = "Msmall"
            encoding[156] = "Nsmall"
            encoding[226] = "Ntildesmall"
            encoding[317] = "OEsmall"
            encoding[227] = "Oacutesmall"
            encoding[231] = "Ocircumflexsmall"
            encoding[232] = "Odieresissmall"
            encoding[362] = "Ogoneksmall"
            encoding[230] = "Ogravesmall"
            encoding[277] = "Oslashsmall"
            encoding[157] = "Osmall"
            encoding[233] = "Otildesmall"
            encoding[160] = "Psmall"
            encoding[161] = "Qsmall"
            encoding[373] = "Ringsmall"
            encoding[162] = "Rsmall"
            encoding[247] = "Scaronsmall"
            encoding[163] = "Ssmall"
            encoding[271] = "Thornsmall"
            encoding[176] = "Tildesmall"
            encoding[164] = "Tsmall"
            encoding[234] = "Uacutesmall"
            encoding[236] = "Ucircumflexsmall"
            encoding[237] = "Udieresissmall"
            encoding[235] = "Ugravesmall"
            encoding[165] = "Usmall"
            encoding[166] = "Vsmall"
            encoding[167] = "Wsamall"
            encoding[264] = "Yacutesmall"
            encoding[330] = "Ydieresissmall"
            encoding[171] = "Ysmall"
            encoding[275] = "Zcaronsmall"
            encoding[172] = "Zsmall"
            encoding[46] = "ampersandsmall"
            encoding[201] = "asuperior"
            encoding[365] = "bsuperior"
            encoding[251] = "centinferior"
            encoding[43] = "centoldstyle"
            encoding[202] = "centsuperior"
            encoding[72] = "colon"
            encoding[173] = "colonmonetary"
            encoding[54] = "comma"
            encoding[262] = "commainferior"
            encoding[370] = "commasuperior"
            encoding[266] = "dollarinferior"
            encoding[44] = "dollaroldstyle"
            encoding[45] = "dollarsuperior"
            encoding[353] = "dsuperior"
            encoding[245] = "eightinferior"
            encoding[70] = "eightoldstyle"
            encoding[241] = "eightsuperior"
            encoding[344] = "esuperior"
            encoding[326] = "exclamdownsmall"
            encoding[41] = "exclamsmall"
            encoding[126] = "ff"
            encoding[131] = "ffi"
            encoding[132] = "ffl"
            encoding[127] = "fi"
            encoding[320] = "figuredash"
            encoding[114] = "fiveeighths"
            encoding[260] = "fiveinferior"
            encoding[65] = "fiveoldstyle"
            encoding[336] = "fivesuperior"
            encoding[130] = "fl"
            encoding[242] = "fourinferior"
            encoding[64] = "fouroldstyle"
            encoding[335] = "foursuperior"
            encoding[57] = "faction"
            encoding[55] = "hyphen"
            encoding[137] = "hypheninferior"
            encoding[321] = "hyphensuperior"
            encoding[351] = "isuperior"
            encoding[361] = "lsuperior"
            encoding[367] = "msuperior"
            encoding[273] = "nineinferior"
            encoding[71] = "nineoldstyle"
            encoding[341] = "ninesuperior"
            encoding[366] = "nsuperior"
            encoding[53] = "onedotenleader"
            encoding[112] = "oneeighth"
            encoding[174] = "onefitted"
            encoding[110] = "onehalf"
            encoding[301] = "oneinferior"
            encoding[61] = "oneoldstyle"
            encoding[107] = "onequarter"
            encoding[332] = "onesuperior"
            encoding[116] = "onethird"
            encoding[257] = "osuperior"
            encoding[133] = "parenleftinferior"
            encoding[50] = "parenleftsuperior"
            encoding[135] = "parenrightinferior"
            encoding[51] = "parenrightsuperior"
            encoding[56] = "period"
            encoding[263] = "periodinferior"
            encoding[371] = "periodsuperior"
            encoding[300] = "questiondownsmall"
            encoding[77] = "questionsmall"
            encoding[345] = "rsuperior"
            encoding[175] = "rupiah"
            encoding[73] = "semicolon"
            encoding[115] = "seveneighths"
            encoding[246] = "seveninferior"
            encoding[67] = "sevenoldstyle"
            encoding[340] = "sevensuperior"
            encoding[244] = "sixinferior"
            encoding[66] = "sixoldstyle"
            encoding[337] = "sixsuperior"
            encoding[40] = "space"
            encoding[352] = "ssuperior"
            encoding[113] = "threeeighths"
            encoding[243] = "threeinferior"
            encoding[63] = "threeoldstyle"
            encoding[111] = "threequarters"
            encoding[75] = "threequartersemdash"
            encoding[334] = "threesuperior"
            encoding[346] = "tsuperior"
            encoding[52] = "twodotenleader"
            encoding[252] = "twoinferior"
            encoding[62] = "twooldstyle"
            encoding[333] = "twosuperior"
            encoding[117] = "twothirds"
            encoding[274] = "zeroinferior"
            encoding[60] = "zerooldstyle"
            encoding[342] = "zerosuperior"

            encoding.octalToDecimalKeys()
        }

        fun copyOf(): SparseArrayCompat<String> {
            return encoding.copyOf()
        }

        override fun putAllTo(target: SparseArrayCompat<String>) {
            target.putAll(encoding)
        }
    }
}