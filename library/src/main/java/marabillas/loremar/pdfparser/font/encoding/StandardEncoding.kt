package marabillas.loremar.pdfparser.font.encoding

import android.support.v4.util.SparseArrayCompat
import marabillas.loremar.pdfparser.copyOf
import marabillas.loremar.pdfparser.octalToDecimalKeys
import marabillas.loremar.pdfparser.set

internal class StandardEncoding {
    companion object : EncodingSource {
        private val encoding = SparseArrayCompat<String>()

        init {
            encoding[101] = "A"
            encoding[341] = "AE"
            encoding[102] = "B"
            encoding[103] = "C"
            encoding[104] = "D"
            encoding[105] = "E"
            encoding[106] = "F"
            encoding[107] = "G"
            encoding[110] = "H"
            encoding[111] = "I"
            encoding[112] = "J"
            encoding[113] = "K"
            encoding[114] = "L"
            encoding[350] = "LSlash"
            encoding[115] = "M"
            encoding[116] = "N"
            encoding[117] = "O"
            encoding[352] = "OE"
            encoding[351] = "OSlash"
            encoding[120] = "P"
            encoding[121] = "Q"
            encoding[122] = "R"
            encoding[123] = "S"
            encoding[124] = "T"
            encoding[125] = "U"
            encoding[126] = "V"
            encoding[127] = "W"
            encoding[130] = "X"
            encoding[131] = "Y"
            encoding[132] = "Z"
            encoding[141] = "a"
            encoding[302] = "acute"
            encoding[361] = "ae"
            encoding[46] = "ampersand"
            encoding[136] = "asciicircum"
            encoding[176] = "asciitilde"
            encoding[52] = "asterisk"
            encoding[100] = "at"
            encoding[142] = "b"
            encoding[134] = "backslash"
            encoding[174] = "bar"
            encoding[173] = "braceleft"
            encoding[175] = "braceright"
            encoding[133] = "bracketleft"
            encoding[135] = "bracketright"
            encoding[306] = "breve"
            encoding[267] = "bullet"
            encoding[143] = "c"
            encoding[317] = "caron"
            encoding[313] = "cedilla"
            encoding[242] = "cent"
            encoding[303] = "circumflex"
            encoding[72] = "colon"
            encoding[54] = "comma"
            encoding[250] = "currency"
            encoding[144] = "d"
            encoding[262] = "dagger"
            encoding[263] = "daggerdbl"
            encoding[310] = "dieresis"
            encoding[44] = "dollar"
            encoding[307] = "dotaccent"
            encoding[365] = "dotlessi"
            encoding[145] = "e"
            encoding[70] = "eight"
            encoding[274] = "ellipsis"
            encoding[320] = "emdash"
            encoding[261] = "endash"
            encoding[75] = "equal"
            encoding[41] = "exclam"
            encoding[241] = "exclamdown"
            encoding[146] = "f"
            encoding[256] = "fi"
            encoding[65] = "five"
            encoding[257] = "fl"
            encoding[246] = "florin"
            encoding[64] = "four"
            encoding[244] = "fraction"
            encoding[147] = "g"
            encoding[373] = "germandbls"
            encoding[301] = "grave"
            encoding[76] = "greater"
            encoding[253] = "guillemotleft"
            encoding[273] = "guillemotright"
            encoding[254] = "guilsinglleft"
            encoding[255] = "guilsinglright"
            encoding[150] = "h"
            encoding[315] = "hungarumlaut"
            encoding[55] = "hyphen"
            encoding[151] = "i"
            encoding[152] = "j"
            encoding[153] = "k"
            encoding[154] = "l"
            encoding[74] = "less"
            encoding[370] = "lslash"
            encoding[155] = "m"
            encoding[305] = "macron"
            encoding[156] = "n"
            encoding[71] = "nine"
            encoding[43] = "numbersign"
            encoding[157] = "o"
            encoding[372] = "oe"
            encoding[316] = "ogonek"
            encoding[61] = "one"
            encoding[343] = "ordfeminine"
            encoding[353] = "ordmasculine"
            encoding[371] = "oslash"
            encoding[160] = "p"
            encoding[266] = "paragraph"
            encoding[50] = "parenleft"
            encoding[51] = "parenright"
            encoding[45] = "percent"
            encoding[56] = "period"
            encoding[264] = "periodcentered"
            encoding[275] = "perthousand"
            encoding[53] = "plus"
            encoding[161] = "q"
            encoding[77] = "question"
            encoding[277] = "questiondown"
            encoding[42] = "quotedbl"
            encoding[271] = "quotedblbase"
            encoding[252] = "quotedblleft"
            encoding[272] = "quotedblright"
            encoding[140] = "quoteleft"
            encoding[47] = "quoteright"
            encoding[270] = "quotesinglbase"
            encoding[251] = "quotesingle"
            encoding[162] = "r"
            encoding[312] = "ring"
            encoding[163] = "s"
            encoding[247] = "section"
            encoding[73] = "semicolon"
            encoding[67] = "seven"
            encoding[66] = "six"
            encoding[57] = "slash"
            encoding[40] = "space"
            encoding[243] = "sterling"
            encoding[164] = "t"
            encoding[63] = "three"
            encoding[304] = "tilde"
            encoding[62] = "two"
            encoding[165] = "u"
            encoding[137] = "underscore"
            encoding[166] = "v"
            encoding[167] = "w"
            encoding[170] = "x"
            encoding[171] = "y"
            encoding[245] = "yen"
            encoding[172] = "z"
            encoding[160] = "zero"

            encoding.octalToDecimalKeys()
        }

        fun copyOf(): SparseArrayCompat<String> {
            return encoding.copyOf()
        }

        override fun putAllTo(target: SparseArrayCompat<String>) {
            target.putAll(encoding)
        }
    }
}