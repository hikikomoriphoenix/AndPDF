package marabillas.loremar.karrypdf.font.ttf

import androidx.collection.SparseArrayCompat
import marabillas.loremar.karrypdf.utils.exts.set

internal class MacOSStandardGlyphs {
    companion object {
        private val encoding = SparseArrayCompat<String>()

        init {
            // Map glyph indices to glyph names
            encoding[0] = ".notdef"
            encoding[1] = ".null"
            encoding[2] = "nonmarkingreturn"
            encoding[3] = "space"
            encoding[4] = "exclam"
            encoding[5] = "quotedbl"
            encoding[6] = "numbersign"
            encoding[7] = "dollar"
            encoding[8] = "percent"
            encoding[9] = "ampersand"
            encoding[10] = "quotesingle"
            encoding[11] = "parenleft"
            encoding[12] = "parenright"
            encoding[13] = "asterisk"
            encoding[14] = "plus"
            encoding[15] = "comma"
            encoding[16] = "hyphen"
            encoding[17] = "period"
            encoding[18] = "slash"
            encoding[19] = "zero"
            encoding[20] = "one"
            encoding[21] = "two"
            encoding[22] = "three"
            encoding[23] = "four"
            encoding[24] = "five"
            encoding[25] = "six"
            encoding[26] = "seven"
            encoding[27] = "eight"
            encoding[28] = "nine"
            encoding[29] = "colon"
            encoding[30] = "semicolon"
            encoding[31] = "less"
            encoding[32] = "equal"
            encoding[33] = "greater"
            encoding[34] = "question"
            encoding[35] = "at"
            encoding[36] = "A"
            encoding[37] = "B"
            encoding[38] = "C"
            encoding[39] = "D"
            encoding[40] = "E"
            encoding[41] = "F"
            encoding[42] = "G"
            encoding[43] = "H"
            encoding[44] = "J"
            encoding[45] = "I"
            encoding[46] = "K"
            encoding[47] = "L"
            encoding[48] = "M"
            encoding[49] = "N"
            encoding[50] = "O"
            encoding[51] = "P"
            encoding[52] = "Q"
            encoding[53] = "R"
            encoding[54] = "S"
            encoding[55] = "T"
            encoding[56] = "U"
            encoding[57] = "V"
            encoding[58] = "W"
            encoding[59] = "X"
            encoding[60] = "Y"
            encoding[61] = "Z"
            encoding[62] = "bracketleft"
            encoding[63] = "backslash"
            encoding[64] = "bracketright"
            encoding[65] = "asciicircum"
            encoding[66] = "underscore"
            encoding[67] = "grave"
            encoding[68] = "a"
            encoding[69] = "b"
            encoding[70] = "c"
            encoding[71] = "d"
            encoding[72] = "e"
            encoding[73] = "f"
            encoding[74] = "g"
            encoding[75] = "h"
            encoding[76] = "i"
            encoding[77] = "j"
            encoding[78] = "k"
            encoding[79] = "l"
            encoding[80] = "m"
            encoding[81] = "n"
            encoding[82] = "o"
            encoding[83] = "p"
            encoding[84] = "q"
            encoding[85] = "r"
            encoding[86] = "s"
            encoding[87] = "t"
            encoding[88] = "u"
            encoding[89] = "v"
            encoding[90] = "w"
            encoding[91] = "x"
            encoding[92] = "y"
            encoding[93] = "z"
            encoding[94] = "braceleft"
            encoding[95] = "bar"
            encoding[96] = "braceright"
            encoding[97] = "asciitilde"
            encoding[98] = "Adieresis"
            encoding[99] = "Aring"
            encoding[100] = "Ccedilla"
            encoding[101] = "Eacute"
            encoding[102] = "Ntilde"
            encoding[103] = "Odieresis"
            encoding[104] = "Udieresis"
            encoding[105] = "aacute"
            encoding[106] = "agrave"
            encoding[107] = "acircumflex"
            encoding[108] = "adieresis"
            encoding[109] = "atilde"
            encoding[110] = "aring"
            encoding[111] = "ccedilla"
            encoding[112] = "eacute"
            encoding[113] = "egrave"
            encoding[114] = "ecircumflex"
            encoding[115] = "edieresis"
            encoding[116] = "iacute"
            encoding[117] = "igrave"
            encoding[118] = "icircumflex"
            encoding[119] = "idieresis"
            encoding[120] = "ntilde"
            encoding[121] = "oacute"
            encoding[122] = "ograve"
            encoding[123] = "ocircumflex"
            encoding[124] = "odieresis"
            encoding[125] = "otilde"
            encoding[126] = "uacute"
            encoding[127] = "ugrave"
            encoding[128] = "ucircumflex"
            encoding[129] = "udieresis"
            encoding[130] = "dagger"
            encoding[131] = "degree"
            encoding[132] = "cent"
            encoding[133] = "sterling"
            encoding[134] = "section"
            encoding[135] = "bullet"
            encoding[136] = "paragraph"
            encoding[137] = "germandbls"
            encoding[138] = "registered"
            encoding[139] = "copyright"
            encoding[140] = "trademark"
            encoding[141] = "acute"
            encoding[142] = "dieresis"
            encoding[143] = "notequal"
            encoding[144] = "AE"
            encoding[145] = "Oslash"
            encoding[146] = "infinity"
            encoding[147] = "plusminus"
            encoding[148] = "lessequal"
            encoding[149] = "greaterequal"
            encoding[150] = "yen"
            encoding[151] = "mu"
            encoding[152] = "partialdiff"
            encoding[153] = "summation"
            encoding[154] = "product"
            encoding[155] = "pi"
            encoding[156] = "integral"
            encoding[157] = "ordfeminine"
            encoding[158] = "ordmasculine"
            encoding[159] = "Omega"
            encoding[160] = "ae"
            encoding[161] = "oslash"
            encoding[162] = "questiondown"
            encoding[163] = "exclamdown"
            encoding[164] = "logicalnot"
            encoding[165] = "radical"
            encoding[166] = "florin"
            encoding[167] = "approxequal"
            encoding[168] = "Delta"
            encoding[169] = "guillemotleft"
            encoding[170] = "guillemotright"
            encoding[171] = "ellipsis"
            encoding[172] = "nonbreakingspace"
            encoding[173] = "Agrave"
            encoding[174] = "Atilde"
            encoding[175] = "Otilde"
            encoding[176] = "OE"
            encoding[177] = "oe"
            encoding[178] = "endash"
            encoding[179] = "emdash"
            encoding[180] = "quotedblleft"
            encoding[181] = "quotedblright"
            encoding[182] = "quoteleft"
            encoding[183] = "quoteright"
            encoding[184] = "divide"
            encoding[185] = "lozenge"
            encoding[186] = "ydieresis"
            encoding[187] = "Ydieresis"
            encoding[188] = "fraction"
            encoding[189] = "currency"
            encoding[190] = "guilsinglleft"
            encoding[191] = "guilsinglright"
            encoding[192] = "fi"
            encoding[193] = "fl"
            encoding[194] = "daggerdbl"
            encoding[195] = "periodcentered"
            encoding[196] = "quotesinglbase"
            encoding[197] = "quotedblbase"
            encoding[198] = "perthousand"
            encoding[199] = "Acircumflex"
            encoding[200] = "Ecircumflex"
            encoding[201] = "Aacute"
            encoding[202] = "Edieresis"
            encoding[203] = "Egrave"
            encoding[204] = "Iacute"
            encoding[205] = "Icircumflex"
            encoding[206] = "Idieresis"
            encoding[207] = "Igrave"
            encoding[208] = "Oacute"
            encoding[209] = "Ocircumflex"
            encoding[210] = "apple"
            encoding[211] = "Ograve"
            encoding[212] = "Uacute"
            encoding[213] = "Ucircumflex"
            encoding[214] = "Ugrave"
            encoding[215] = "dotlessi"
            encoding[216] = "circumflex"
            encoding[217] = "tilde"
            encoding[218] = "macron"
            encoding[219] = "breve"
            encoding[220] = "dotaccent"
            encoding[221] = "ring"
            encoding[222] = "cedilla"
            encoding[223] = "hungarumlaut"
            encoding[224] = "ogonek"
            encoding[225] = "caron"
            encoding[226] = "Lslash"
            encoding[227] = "lslash"
            encoding[228] = "Scaron"
            encoding[229] = "scaron"
            encoding[230] = "Zcaron"
            encoding[231] = "zcaron"
            encoding[232] = "brokenbar"
            encoding[233] = "Eth"
            encoding[234] = "eth"
            encoding[235] = "Yacute"
            encoding[236] = "yacute"
            encoding[237] = "Thorn"
            encoding[238] = "thorn"
            encoding[239] = "minus"
            encoding[240] = "multiply"
            encoding[241] = "onesuperior"
            encoding[242] = "twosuperior"
            encoding[243] = "threesuperior"
            encoding[244] = "onehalf"
            encoding[245] = "onequarter"
            encoding[246] = "threequarters"
            encoding[247] = "franc"
            encoding[248] = "Gbreve"
            encoding[249] = "gbreve"
            encoding[250] = "Idotaccent"
            encoding[251] = "Scedilla"
            encoding[252] = "scedilla"
            encoding[253] = "Cacute"
            encoding[254] = "cacute"
            encoding[255] = "Ccaron"
            encoding[256] = "ccaron"
            encoding[257] = "dcroat"
        }

        operator fun get(glyphIndex: Int): String? {
            return encoding[glyphIndex]
        }

        fun putAllTo(target: SparseArrayCompat<String>) {
            target.putAll(encoding)
        }
    }
}